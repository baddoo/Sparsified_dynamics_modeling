%

function dynamics_plot(X_org,Y_org,X_sparse,Y_sparse,nvc,nc,dim)

LW = 'LineWidth'; CL = 'Color'; MFC = 'MarkerFaceColor';
cmap = hsv(nc); % Define colormap
Xm = 0;%mean(X);
Ym = 0;%mean(Y); % Rescaling factor
r_macro = 1;%mean(sqrt((X-Xm).^2+(Y-Ym).^2));
%X_org = [X X_org(:,1:nt)];X_org = (X_org-Xm)/r_macro;
%Y_org = [Y Y_org(:,1:nt)];Y_org = (Y_org-Ym)/r_macro;
nt = 100;
%X_sparse = [X_sparse(:,1:nt)];X_sparse = (X_sparse - Xm)/r_macro;
%Y_sparse = [Y_sparse(:,1:nt)];Y_sparse = (Y_sparse - Ym)/r_macro;


if dim == 2 % 2D plot
    
    
elseif dim ==3 % 3D plot:


[x, y, z] = sphere(128);
surfl(x, y, z,'light'); 
colormap gray
%set(h, 'FaceAlpha', 0.5)
shading interp
caxis([-2,0])
hold on
for j = 1:nc
    
% Trajectories of vortices    
thetV = X_org((j-1)*nvc+1:j*nvc,:); phiV = Y_org((j-1)*nvc+1:j*nvc,:);

% Mean of sparsified trajectories
thetS = mean(X_sparse((j-1)*nvc+1:j*nvc,:),1); phiS = mean(Y_sparse((j-1)*nvc+1:j*nvc,:),1);

% Mean of full trajectories
thetF = mean(X_org((j-1)*nvc+1:j*nvc,:),1); phiF = mean(Y_org((j-1)*nvc+1:j*nvc,:),1);

fac = 1.01;

% Convert from spherical polars to Cartesian coordinates
[xS,yS,zS] = sph2cart(phiS,thetS,fac); % Mean sparsified
[xF,yF,zF] = sph2cart(phiF,thetF,fac); % Mean full
[xV,yV,zV] = sph2cart(phiV,thetV,fac); % Full vortex trajectories

% Plot vortex trajectories
for l = 1:nvc % Need to vectorise to make lines transparent
pv = plot3(xV(l,:),yV(l,:),zV(l,:),'k',LW,.5);
pv.Color(4)=0.2;
end

% Plot 
plot3(xS,yS,zS,'-',CL,cmap(j,:),LW,3);
plot3(xF,yF,zF,'--',CL,cmap(j,:),LW,3);

plot3(x(1),yF(1),zF(1),'o',CL,cmap(j,:),MFC,cmap(j,:),LW,3);
end

hold off
axis equal
axis off
lighting gouraud
axis vis3d
end

end